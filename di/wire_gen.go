// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"github.com/gin-gonic/gin"
	"github.com/google/wire"
	"github.com/sesaquecruz/go-chat-broadcaster/config"
	"github.com/sesaquecruz/go-chat-broadcaster/internal/chat"
	"github.com/sesaquecruz/go-chat-broadcaster/internal/rabbitmq"
	"github.com/sesaquecruz/go-chat-broadcaster/internal/redis"
	"github.com/sesaquecruz/go-chat-broadcaster/internal/web/handler"
	"github.com/sesaquecruz/go-chat-broadcaster/internal/web/router"
)

// Injectors from wire.go:

func NewChatBroadcaster(rabbitMqConn *rabbitmq.Connection, redisConn *redis.Connection) *chat.Broadcaster {
	broker := rabbitmq.NewBroker(rabbitMqConn)
	redisBroker := redis.NewBroker(redisConn)
	broadcaster := chat.NewBroadcaster(broker, redisBroker)
	return broadcaster
}

func NewApiRouter(cfg *config.Config, rabbitMqConn *rabbitmq.Connection, redisConn *redis.Connection) *gin.Engine {
	healthz := handler.NewHealthz(cfg, rabbitMqConn, redisConn)
	broker := redis.NewBroker(redisConn)
	subscriber := handler.NewSubscriber(broker)
	engine := router.ApiRouter(cfg, healthz, subscriber)
	return engine
}

// wire.go:

var setSubscriber = wire.NewSet(redis.NewBroker, wire.Bind(new(chat.Subscriber), new(*redis.Broker)))
